let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()
    Plug 'tpope/vim-commentary'
    Plug 'nanotech/jellybeans.vim'
    Plug 'vim-autoformat/vim-autoformat'
    Plug 'andreasvc/vim-256noir'
    Plug 'kxzk/skull-vim'
    Plug 'Lokaltog/vim-monotone'
    Plug 'YorickPeterse/vim-paper'
    Plug 'nikolvs/vim-sunbather'
    Plug 'ntk148v/komau.vim'
call plug#end()

" Format on save
" au BufWrite * :Autoformat

" ---------- GENERAL SETTINGS  ----------
filetype plugin indent on

set langmenu=en_US.UTF-8
language messages en_US

set nocompatible
set fileformats=unix,mac
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8
set splitbelow splitright " Sane splitting
set title      " Set title of a window to filename
set noswapfile " Prevent vim from creating .swp files

set nowrap
" set linebreak    " Break lines at word (requires Wrap lines)
" set showbreak=â†³  " Line break symbols
set virtualedit=block " Enable free-range cursor
set display+=lastline " Always try to show a paragraph's last line
set laststatus=2      " Always show status line
set ruler             " Show line and column info in status line

set colorcolumn=80
set textwidth=80

let g:jellybeans_overrides = {'background': { 'ctermbg': 'none', '256ctermbg': 'none', 'ctermfg': 'White', '256ctermfg': 'White'}}

set termguicolors
function! ChangeBackground()
  if system("defaults read -g AppleInterfaceStyle") =~ '^Dark'
    let g:monotone_color = [0, 53, 85] " Sets theme color 
    let g:monotone_contrast_factor = 1.1
    let g:monotone_secondary_hue_offset = 10 " Offset secondary colors by 200 degrees
    " let g:monotone_emphasize_comments = 1 " Emphasize comments
    colorscheme monotone
    set background=dark   " for the dark version of the theme
  else
    colors komau
    set background=light  " for the light version of the theme
  endif
endfunction

" initialize the colorscheme for the first run
call ChangeBackground()

if has("gui_running")
  set guifont=Menlo:h15
  set go-=r
  set go-=l
  set go-=L
endif

syntax on
set cursorline " Highlight cursor line
" set cursorlineopt=number
set showmatch  " highlight matching brace
set nu         " Turn on the line numbers

set hlsearch     " Highlight all search results
set smartcase    " Enable smart-case search
set ignorecase   " Always case-insensitive
set incsearch    " Searches for strings incrementally
set shortmess-=S " Show search count message, e.g. [1/5]

" Center search results on screen
nnoremap n nzz
nnoremap N Nzz

nnoremap j gj
nnoremap k gk

set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab " Use spaces instead of tabs

autocmd BufNewFile,BufRead,BufWinEnter,FileType,OptionSet * set formatoptions-=t formatoptions-=l formatoptions-=c formatoptions-=r formatoptions-=o formatoptions-=q
autocmd BufNewFile,BufRead,BufWinEnter,FileType,OptionSet * setlocal formatoptions-=t formatoptions-=l formatoptions-=c formatoptions-=r formatoptions-=o formatoptions-=q

set smartindent " Enable smart-indent
set autoindent  " Auto-indent new lines
set smarttab    " Enable smart-tabs

set autochdir   " Change working directory to open buffer
set autoread    " Auomatically read files modified elsewhere
set hidden      " Hide buffer instead of closing when loading a new one

set backspace=indent,eol,start  " Backspace behaviour

set mouse=a  " Enable mouse in vim

set wildmenu " cmd line completion
set wildmode=list:longest,full

set confirm " Prompt confirmation dialogs (better quitting)

" Disable visualbell
set noerrorbells visualbell t_vb=
if has('autocmd')
  autocmd GUIEnter * set visualbell t_vb=
endif

set undolevels=1000 " Number of undo levels

set clipboard=unnamed,unnamedplus

if !isdirectory($HOME."/.config/vim-undodir")
  call mkdir($HOME."/.config/vim-undodir", "", 0700)
endif
set undodir=~/.config/vim/vim-undodir
set undofile
